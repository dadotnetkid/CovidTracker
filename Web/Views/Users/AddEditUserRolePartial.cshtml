@model UserRoles
<div class="row min-width-77">
    <div class="col-12">
        <div class="row ">
            <div class="col-12">
                @{
                    Html.DevExpress().TextBoxFor(x => x.Name, settings =>
                    {
                        settings.Width = Unit.Percentage(100);
                        settings.Properties.Caption = "Name";
                        settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                        settings.ShowModelErrors = true;

                    }).GetHtml();

                }
            </div>
        </div>
        <div class="row">
            <div class="col-12">
                @{
                    Html.DevExpress().TextBoxFor(x => x.Description, settings =>
                    {
                        settings.Width = Unit.Percentage(100);
                        settings.Properties.Caption = "Description";
                        settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                    }).GetHtml();
                }
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12">
                @{
                    Html.DevExpress().TokenBox(settings =>
                    {
                        settings.Width = Unit.Percentage(100);
                        settings.Name = "Actions";
                        settings.Properties.Caption = "User Roles";
                        settings.Properties.NullText = "User Roles";
                        settings.ShowModelErrors = true;
                        settings.Properties.ValidationSettings.Display = Display.Dynamic;
                        settings.Properties.CaptionSettings.Position = EditorCaptionPosition.Left;
                        settings.PreRender = (s, e) =>
                        {
                            ASPxTokenBox tokenBox = s as ASPxTokenBox;
                            if (Model?.Functions != null)
                            {
                                foreach (var i in Model?.Functions)
                                {
                                    tokenBox.Tokens.Add(i.Action);
                                }
                            }
                        };
                    }).BindList(new UnitOfWork().FunctionsRepo.Get().Select(x => x.Action)).GetHtml();
                }
            </div>
        </div>
    </div>
</div>
<div class="row margin-top-10 ">
    <div class="col-lg-12">
        @{
            Html.DevExpress().Button(settings =>
            {
                settings.Name = "btnSubmit";
                settings.ClientSideEvents.Click = "function(s,e){UserRolesGridView.UpdateEdit()}";
                settings.Text = "Submit";
            }).GetHtml();
            Html.DevExpress().Button(settings =>
            {
                settings.Name = "btnCancel";
                settings.ControlStyle.CssClass = "margin-left-10";
                settings.ClientSideEvents.Click = "function(s,e){UserRolesGridView.CancelEdit()}";
                settings.Text = "Cancel";
            }).GetHtml();
        }
    </div>
</div>